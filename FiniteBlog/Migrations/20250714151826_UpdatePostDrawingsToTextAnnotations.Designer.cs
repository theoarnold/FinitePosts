// <auto-generated />
using System;
using FiniteBlog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiniteBlog.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250714151826_UpdatePostDrawingsToTextAnnotations")]
    partial class UpdatePostDrawingsToTextAnnotations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FiniteBlog.Models.AnonymousPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachedFileContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachedFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AttachedFileSizeBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("AttachedFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentViews")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AnonymousPosts");
                });

            modelBuilder.Entity("FiniteBlog.Models.PostDrawing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByFingerprint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PositionX")
                        .HasColumnType("float");

                    b.Property<double>("PositionY")
                        .HasColumnType("float");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("PostDrawings");
                });

            modelBuilder.Entity("FiniteBlog.Models.PostViewer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrowserFingerprint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ViewedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VisitorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("PostViewers");
                });

            modelBuilder.Entity("FiniteBlog.Models.PostDrawing", b =>
                {
                    b.HasOne("FiniteBlog.Models.AnonymousPost", "Post")
                        .WithMany("Drawings")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FiniteBlog.Models.PostViewer", b =>
                {
                    b.HasOne("FiniteBlog.Models.AnonymousPost", "Post")
                        .WithMany("Viewers")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FiniteBlog.Models.AnonymousPost", b =>
                {
                    b.Navigation("Drawings");

                    b.Navigation("Viewers");
                });
#pragma warning restore 612, 618
        }
    }
}
